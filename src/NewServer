Описание последнего варианта сервера. Старый пока оставил, может пригодиться что то взять, что бы не писать по 10 раз одно и тоже

Состав:

   Классы:

+	* класс Application - сервер. Включает в себя все остальные объекты сервера
+	* класс Client      - связь с отдельным клиентом
+	* класс PowerPost   - связь с отдельным Пунктом Питания
-	* класс Server      - команды от сервера 
+	* класс Connect     - подключение новыйх устройств
+	* класс DBLogger    - интерфейс Базы Данных и журнала команд

	классы потоков
	
+	* класс ClientThread
+	* класс ServerThread
+	* класс PPThread

	Очереди:

+	* класс QueueCln    - очереди сообщений для и от Клиента
+	* класс QueuePP     - очереди сообщений для и от ПП
+	* класс QueueSvr    - очереди сообщений для и от Сервера; все сообщения, проходящие через сервер

______________________________________________________


Класс Aplication

	Задачи:

	* Запуск сервера
	* создание БД
	* создание всех классов
	* создание всех потоков
	
	Потоки
	
	* главный поток всего приложения
	
	Методы:

	* создать базу данных
	* создать класс Connection
	
______________________________________________________

Класс Connection

	Задачи:

	* прослушка всех входящих подключений
	* создание класса Client
	* создание класса PowerPost
	
	Потоки:

	* поток прослушки порта подключения

	Методы:

	* метод Run который при подключение определяет, кто подключился и создает необходимый класс

______________________________________________________

Класс Client

	Задачи:

	* получение всех входящих сообщений от клиента и добавление их в очередь MessageFromClient
	* обработка входящих сообщений из очереди MessageFromClient
	* анализ входящих сообщений из очереди QueueClient
	* отправка сообщений клиенту

	Потоки:
	
	* прослушка порта клиента
	* обработка сообщений их очереди MessageFromClient
	* обработка сообщений из очереди QueueClient

	Методы:
	
	* отправить сообщение на Клиент
	* получить сообщение с Клиента
	* отпарсить сообщение
	* сформировать пакет сообщения
	* запустить поток обработки сообщений из MessageFromClient
	* заупстить поток обработки сообщений из QueueClient
	* добавление сообщения в очередь QueueClient
	
______________________________________________________

Класс PowerPost

	Задачи:

	* получение сообщений от ПП
	* добавление сообщений в очередь MessageFromPP
	* обработка сообщений из MessageFromPP
	* обработка сообщений из QueuePP
	* отправка сообщений на ПП

	Потоки:

	* прослушка порта ПП
	* обработка сообщений из очереди MessageFromPP
	* обработка сообщений из очереди QueuePP
	
	Методы:
	
	* отправить сообщение на ПП
	* получить сообщение с ПП
	* отпарсить сообщение
	* сформировать пакет сообщения
	* запустить поток обработки сообщений из MessageFromPP
	* заупстить поток обработки сообщений из QueuePP
	* добавление сообщения в очередь QueuePP
	
______________________________________________________

Класс Server  -- понять как будет работать

	Задачи:

	* некий ангоритм управление всей системой
	* составление расписания
	* управление светильниками по расписанию
	* добавление команд в очередь QueueSvr

	Все остальное пока не известно

______________________________________________________


Класс DBLogger

	Задачи:

	* создать БД
	* add, get, set, del
	* обработка журнала операций
	* добавление в БД устройств

	Потоки:

	* обработка операций в БД операций
	
	Методы:

	* запустить поток обработки БД операций
	* add, get, set, del
	
______________________________________________________

	
Класс ClientThread

	Задачи:

	* обработка очереди QueueClient
	* передачи сообщений в DBJournal
	* передачи сообщения в QueueSvr

	Потоки:

	* обработка очереди QueueClient

	Методы:

	* addToDBJournal
	* addToQueueSvr

______________________________________________________

Класс ServerThread

	Задаачи:
	
	* главный поток всего сервера. Самое узкое место!
	* получение сообщений из QueueSvr
	* распределения сообщений дальше между очередями QueueClient и QueuePP
	* анализ сообщений

	Потоки: 
	
	* один главный поток
	
	Методы:

	* запустить поток 
	* получить новое сообщение из QueueSvr
	* переслать сообщение в QueueClient
	* переслать сообщений в QueuePP
	
______________________________________________________

Класс PPThread

	Задачи:

	* обработка очереди QueuePP
	* передачи сообщений в DBJournal
	* передачи сообщения в QueueSvr

	Потоки:

	* обработка очереди QueuePP

	Методы:

	* addToDBJournal
	* addToQueueSvr

______________________________________________________

Класс QueueCln  
	
	Задачи:

	* хранение всех сообщений для и от клиентов
	* разграничение доступа. Проблема читателей и писателей
	
	Потоки: нет

	Методы:

	* add, del, get

______________________________________________________

Класс QueuePP 

	Задачи:

	* хранение всех сообщений для и от ПП
	* разграничение доступа. Проблема читателей и писателей
	
	Потоки: нет

	Методы:

	* add, del, get

______________________________________________________

Класс QueueSvr  

	Задачи:

	* хранение всех сообщений серевера. Все сообщения между клиентами и ПП.
	* разграничение доступа. Проблема читателей и писателей
	
	Потоки: нет

	Методы:

	* add, del, get

______________________________________________________
	
	

